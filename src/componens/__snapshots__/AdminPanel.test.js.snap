// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Admin Panel tests Panel wyrenderowano 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AdminPanel />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <div
          className="form-group"
        >
          <input
            className="form-control"
            id="name"
            name="name"
            onChange={[Function]}
            placeholder="Nazwa ksiazki"
            type="text"
            value=""
          />
        </div>
        <div
          className="form-group"
        >
          <input
            className="form-control"
            id="author"
            name="author"
            onChange={[Function]}
            placeholder="Autor"
            type="text"
            value=""
          />
        </div>
        <div
          className="form-group"
        >
          <textarea
            className="form-control"
            id="description"
            name="description"
            onChange={[Function]}
            placeholder="Opis książki"
            value=""
          />
        </div>
        <div
          className="form-group"
        >
          <label
            className="form-check-label"
            htmlFor="onStock"
            style={
              Object {
                "color": "white",
              }
            }
          >
            Dostępność:
          </label>
          <input
            className="form-check"
            id="onStock"
            name="onStock"
            onChange={[Function]}
            type="checkbox"
            value={false}
          />
        </div>
        <div
          className="form-group"
        >
          <textarea
            className="form-control"
            id="image"
            name="image"
            onChange={[Function]}
            placeholder="Grafika"
            value=""
          />
        </div>
        <button
          className="btn btn-success"
          type="submit"
        >
          Dodaj
        </button>
      </form>,
      "className": "adminpanel col-md-4",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form-group"
          >
            <input
              className="form-control"
              id="name"
              name="name"
              onChange={[Function]}
              placeholder="Nazwa ksiazki"
              type="text"
              value=""
            />
          </div>,
          <div
            className="form-group"
          >
            <input
              className="form-control"
              id="author"
              name="author"
              onChange={[Function]}
              placeholder="Autor"
              type="text"
              value=""
            />
          </div>,
          <div
            className="form-group"
          >
            <textarea
              className="form-control"
              id="description"
              name="description"
              onChange={[Function]}
              placeholder="Opis książki"
              value=""
            />
          </div>,
          <div
            className="form-group"
          >
            <label
              className="form-check-label"
              htmlFor="onStock"
              style={
                Object {
                  "color": "white",
                }
              }
            >
              Dostępność:
            </label>
            <input
              className="form-check"
              id="onStock"
              name="onStock"
              onChange={[Function]}
              type="checkbox"
              value={false}
            />
          </div>,
          <div
            className="form-group"
          >
            <textarea
              className="form-control"
              id="image"
              name="image"
              onChange={[Function]}
              placeholder="Grafika"
              value=""
            />
          </div>,
          <button
            className="btn btn-success"
            type="submit"
          >
            Dodaj
          </button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="form-control"
              id="name"
              name="name"
              onChange={[Function]}
              placeholder="Nazwa ksiazki"
              type="text"
              value=""
            />,
            "className": "form-group",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control",
              "id": "name",
              "name": "name",
              "onChange": [Function],
              "placeholder": "Nazwa ksiazki",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="form-control"
              id="author"
              name="author"
              onChange={[Function]}
              placeholder="Autor"
              type="text"
              value=""
            />,
            "className": "form-group",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control",
              "id": "author",
              "name": "author",
              "onChange": [Function],
              "placeholder": "Autor",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <textarea
              className="form-control"
              id="description"
              name="description"
              onChange={[Function]}
              placeholder="Opis książki"
              value=""
            />,
            "className": "form-group",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control",
              "id": "description",
              "name": "description",
              "onChange": [Function],
              "placeholder": "Opis książki",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="form-check-label"
                htmlFor="onStock"
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                Dostępność:
              </label>,
              <input
                className="form-check"
                id="onStock"
                name="onStock"
                onChange={[Function]}
                type="checkbox"
                value={false}
              />,
            ],
            "className": "form-group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Dostępność:",
                "className": "form-check-label",
                "htmlFor": "onStock",
                "style": Object {
                  "color": "white",
                },
              },
              "ref": null,
              "rendered": "Dostępność:",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-check",
                "id": "onStock",
                "name": "onStock",
                "onChange": [Function],
                "type": "checkbox",
                "value": false,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <textarea
              className="form-control"
              id="image"
              name="image"
              onChange={[Function]}
              placeholder="Grafika"
              value=""
            />,
            "className": "form-group",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control",
              "id": "image",
              "name": "image",
              "onChange": [Function],
              "placeholder": "Grafika",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Dodaj",
            "className": "btn btn-success",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Dodaj",
          "type": "button",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <div
            className="form-group"
          >
            <input
              className="form-control"
              id="name"
              name="name"
              onChange={[Function]}
              placeholder="Nazwa ksiazki"
              type="text"
              value=""
            />
          </div>
          <div
            className="form-group"
          >
            <input
              className="form-control"
              id="author"
              name="author"
              onChange={[Function]}
              placeholder="Autor"
              type="text"
              value=""
            />
          </div>
          <div
            className="form-group"
          >
            <textarea
              className="form-control"
              id="description"
              name="description"
              onChange={[Function]}
              placeholder="Opis książki"
              value=""
            />
          </div>
          <div
            className="form-group"
          >
            <label
              className="form-check-label"
              htmlFor="onStock"
              style={
                Object {
                  "color": "white",
                }
              }
            >
              Dostępność:
            </label>
            <input
              className="form-check"
              id="onStock"
              name="onStock"
              onChange={[Function]}
              type="checkbox"
              value={false}
            />
          </div>
          <div
            className="form-group"
          >
            <textarea
              className="form-control"
              id="image"
              name="image"
              onChange={[Function]}
              placeholder="Grafika"
              value=""
            />
          </div>
          <button
            className="btn btn-success"
            type="submit"
          >
            Dodaj
          </button>
        </form>,
        "className": "adminpanel col-md-4",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="form-group"
            >
              <input
                className="form-control"
                id="name"
                name="name"
                onChange={[Function]}
                placeholder="Nazwa ksiazki"
                type="text"
                value=""
              />
            </div>,
            <div
              className="form-group"
            >
              <input
                className="form-control"
                id="author"
                name="author"
                onChange={[Function]}
                placeholder="Autor"
                type="text"
                value=""
              />
            </div>,
            <div
              className="form-group"
            >
              <textarea
                className="form-control"
                id="description"
                name="description"
                onChange={[Function]}
                placeholder="Opis książki"
                value=""
              />
            </div>,
            <div
              className="form-group"
            >
              <label
                className="form-check-label"
                htmlFor="onStock"
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                Dostępność:
              </label>
              <input
                className="form-check"
                id="onStock"
                name="onStock"
                onChange={[Function]}
                type="checkbox"
                value={false}
              />
            </div>,
            <div
              className="form-group"
            >
              <textarea
                className="form-control"
                id="image"
                name="image"
                onChange={[Function]}
                placeholder="Grafika"
                value=""
              />
            </div>,
            <button
              className="btn btn-success"
              type="submit"
            >
              Dodaj
            </button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="form-control"
                id="name"
                name="name"
                onChange={[Function]}
                placeholder="Nazwa ksiazki"
                type="text"
                value=""
              />,
              "className": "form-group",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "name",
                "name": "name",
                "onChange": [Function],
                "placeholder": "Nazwa ksiazki",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="form-control"
                id="author"
                name="author"
                onChange={[Function]}
                placeholder="Autor"
                type="text"
                value=""
              />,
              "className": "form-group",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "author",
                "name": "author",
                "onChange": [Function],
                "placeholder": "Autor",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <textarea
                className="form-control"
                id="description"
                name="description"
                onChange={[Function]}
                placeholder="Opis książki"
                value=""
              />,
              "className": "form-group",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "description",
                "name": "description",
                "onChange": [Function],
                "placeholder": "Opis książki",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="form-check-label"
                  htmlFor="onStock"
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  Dostępność:
                </label>,
                <input
                  className="form-check"
                  id="onStock"
                  name="onStock"
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />,
              ],
              "className": "form-group",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Dostępność:",
                  "className": "form-check-label",
                  "htmlFor": "onStock",
                  "style": Object {
                    "color": "white",
                  },
                },
                "ref": null,
                "rendered": "Dostępność:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-check",
                  "id": "onStock",
                  "name": "onStock",
                  "onChange": [Function],
                  "type": "checkbox",
                  "value": false,
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <textarea
                className="form-control"
                id="image"
                name="image"
                onChange={[Function]}
                placeholder="Grafika"
                value=""
              />,
              "className": "form-group",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "image",
                "name": "image",
                "onChange": [Function],
                "placeholder": "Grafika",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Dodaj",
              "className": "btn btn-success",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Dodaj",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
